<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<mapper namespace="kr.or.kosta.semicolon.review.dao.ReviewDao">
	
	<!-- 리뷰 생성 -->
	<insert id="insert" parameterType="Review">
		<selectKey keyProperty="reviewNo" order="BEFORE" resultType="int">
			SELECT SEQ_REVIEW.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO review 
				(
		            review_no, 
		            goods_no, 
		            member_no, 
		            attach_file, 
		            content,
		            grade
		        ) 
				VALUES      
				(
					#{reviewNo}, 
		            #{goodsNo}, 
		            #{memberNo}, 
		            #{attachFile}, 
		            #{content},
		            #{grade}
		        )
	</insert>
	
	<!-- 리뷰 읽기 -->
	<select id="select" resultType="Review">
		SELECT review_no		reviewNo,
               goods_no			goodsNo,
               member_no		memberNo,
               attach_file		attachFile,
               content,
               TO_CHAR(regdate, 'YYYY-MM-DD')		regdate,
               grade 
		FROM   review 
		WHERE  review_no = #{reviewNo}
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="update">
		UPDATE review 
		SET    goods_no = #{goodsNo},
		       attach_file = #{attachFile},
		       content = #{content},
		       regdate = sysdate,
		       grade = #{grade}
		WHERE  review_no = #{reviewNo}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="delete">
		DELETE FROM review
		WHERE review_no = #{reviewNo}
	</delete>
	
	<!-- 리스트 출력 -->
	<select id="allList" resultType="Review">
		SELECT review_no 		reviewNo, 
		       goods_no			goodsNo, 
		       member_no		memberNo, 
		       attach_file		attachFile, 
		       content, 
		       TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI:ss') regdate,
		       grade 
		FROM   review
		ORDER  BY regdate DESC
	</select>
	
	<!-- 리스트 카운트 -->
	<select id="listAvg" resultType="int">
		SELECT Trunc(Avg(grade), 0) 
		FROM   review 
		WHERE  goods_no = #{goodsNo}
	</select>
	
	<!-- 리스트 페이징 출력 -->
	<select id="listAll" parameterType="UseParameter" resultType="Review">
		SELECT review_no, 
		       goods_no, 
		       member_no, 
		       attach_file, 
		       content,
		       regdate,
		       grade
		FROM   (SELECT CEIL(rownum / 5) request_page, 
		               review_no, 
		               goods_no,
		               member_no,
		               attach_file,
		               content,
		               regdate, 
		               grade  
		        FROM   (SELECT review_no, 
		                       goods_no, 
		                       member_no, 
		                       attach_file, 
		                       content,
		                       TO_CHAR(regdate, 'YYYY-MM-DD HH24:MI') regdate,
		                       grade
		                FROM   review
		                WHERE  goods_no = #{value}
		                ORDER  BY regdate DESC)) 
		WHERE  request_page = #{page}
	</select>
	
	<!-- 파일 찾기 -->
	<select id="getFile" resultType="String">
	select  attach_file
	from 	review
	where 	review_no = #{reviewNo}
	</select>
	
	<!-- 해당 상품에 대한 리뷰 개수 -->
	<select id="selectReviewCount" parameterType="int" resultType="int">
		SELECT Count(review_no) count
		FROM   review 
		WHERE  goods_no = #{goodsNo}
	</select>
</mapper>